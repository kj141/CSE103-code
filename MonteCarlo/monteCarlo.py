from random import random
from matplotlib.backends.backend_pdf import PdfPages
from pylab import *

def running_average(n,m,p):
    """Compute the running average for m random binary sequences, each of
    length n. The sequences are generated by flipping a random coin
    whose probability of landing '1' is p.

    """
    aver=zeros((n,m))
    for j in range(m):
        outcomes=[(1 if random()<p else 0) for i in range(n)]
        c=cumsum(outcomes)
        aver[:,j] = [c[i]/(i+1.0) for i in range(len(c))]
    return aver;

def envelope(n,p):
    env=zeros((n,3))
    env[:,1]=[p for i in range(n)]
    env[:,0]=[p+0.5/sqrt(i+1.0) for i in range(n)]
    env[:,2]=[p-0.5/sqrt(i+1.0) for i in range(n)]
    return env
    
### Main

# Create the PdfPages object to which we will save the pages:
n=10000 # length of sequence
m=10      # number of sequences

pdf = PdfPages('averages'+str(n)+'.pdf')

plot(running_average(n,m,0.02),'r')
plot(envelope(n,0.02),'g')

plot(running_average(n,m,0.0175),'b')
plot(envelope(n,0.0175),'k')

ylim((0.01,0.03))

title('n='+str(n))
xlabel('number of coin flips')
ylabel("fraction of 1's")
savefig(pdf, format='pdf') # note the format='pdf' argument!
close()
pdf.close()
